swagger: "2.0"
info:
  description: "API Swagger for Toodledo, docment link: https://api.toodledo.com/3/index.php , powered by @alswl"
  version: "3.0.0"
  title: "Swagger Toodledo"
  contact:
    email: "alswlx@gmail.com"
externalDocs:
  description: "Official toodledo API documents"
  url: "https://api.toodledo.com/3/index.php"
host: "api.toodledo.com"
basePath: "/3"
tags:
  - name: folder
  - name: context
  - name: goal
  - name: location
  - name: task
  - name: saved search
  - name: note
  - name: list
schemes:
  - "https"
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://api.toodledo.com/3/account/authorize.php
    tokenUrl: https://api.toodledo.com/3/account/token.php
    scopes:
      read: Grants read access
      write: Grants write access
paths:
  /folders/get.php:
    get:
      tags:
        - "folder"
      security:
        - OAuth2:
            - read
            - write
      produces:
        - "application/json"
      responses:
        "200":
          description: "ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Folder"
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '429':
          description: TooManyRequests
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: ServiceUnavailable
          schema:
            $ref: '#/definitions/Error'
  /folders/add.php:
    post:
      tags:
        - "folder"
      security:
        - OAuth2:
            - read
            - write
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "query"
          type: string
          name: "name"
          required: true
        - in: "query"
          name: "private"
          type: integer
          format: "int32"
          required: false
      responses:
        "200":
          description: ok
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Folder"
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '429':
          description: TooManyRequests
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: ServiceUnavailable
          schema:
            $ref: '#/definitions/Error'
  /folders/edit.php:
    post:
      tags:
        - "folder"
      security:
        - OAuth2:
            - read
            - write
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "query"
          type: string
          name: "id"
          required: true
        - in: "query"
          type: string
          name: "name"
        - in: "query"
          name: "private"
          type: integer
          format: "int32"
        - in: "query"
          name: "archived"
          type: integer
          format: "int32"
      responses:
        "200":
          description: ok
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Folder"
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '429':
          description: TooManyRequests
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: ServiceUnavailable
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    properties:
      errorCode:
        type: integer
      errorDesc:
        type: string
    required:
      - errorCode
      - errorDesc
  Folder:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      private:
        type: "integer"
        format: "int32"
      archived:
        type: "integer"
        format: "int32"
      ord:
        type: "integer"
        format: "int32"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"