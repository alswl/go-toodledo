// Code generated by mockery v2.38.0. DO NOT EDIT.

package mockui

import mock "github.com/stretchr/testify/mock"

// VisibleInterface is an autogenerated mock type for the VisibleInterface type
type VisibleInterface struct {
	mock.Mock
}

// Hide provides a mock function with given fields:
func (_m *VisibleInterface) Hide() {
	_m.Called()
}

// IsVisible provides a mock function with given fields:
func (_m *VisibleInterface) IsVisible() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for IsVisible")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Show provides a mock function with given fields:
func (_m *VisibleInterface) Show() {
	_m.Called()
}

// NewVisibleInterface creates a new instance of VisibleInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewVisibleInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *VisibleInterface {
	mock := &VisibleInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
