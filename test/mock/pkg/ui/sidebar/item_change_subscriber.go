// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocksidebar

import (
	models "github.com/alswl/go-toodledo/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// ItemChangeSubscriber is an autogenerated mock type for the ItemChangeSubscriber type
type ItemChangeSubscriber struct {
	mock.Mock
}

// Execute provides a mock function with given fields: tab, item
func (_m *ItemChangeSubscriber) Execute(tab string, item models.Item) error {
	ret := _m.Called(tab, item)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, models.Item) error); ok {
		r0 = rf(tab, item)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewItemChangeSubscriber creates a new instance of ItemChangeSubscriber. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewItemChangeSubscriber(t interface {
	mock.TestingT
	Cleanup(func())
}) *ItemChangeSubscriber {
	mock := &ItemChangeSubscriber{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
