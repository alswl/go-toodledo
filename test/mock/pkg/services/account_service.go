// Code generated by mockery v2.30.1. DO NOT EDIT.

package mockservices

import (
	models "github.com/alswl/go-toodledo/pkg/models"
	mock "github.com/stretchr/testify/mock"
)

// AccountService is an autogenerated mock type for the AccountService type
type AccountService struct {
	mock.Mock
}

// Me provides a mock function with given fields:
func (_m *AccountService) Me() (*models.Account, error) {
	ret := _m.Called()

	var r0 *models.Account
	var r1 error
	if rf, ok := ret.Get(0).(func() (*models.Account, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() *models.Account); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Account)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewAccountService creates a new instance of AccountService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAccountService(t interface {
	mock.TestingT
	Cleanup(func())
}) *AccountService {
	mock := &AccountService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
