// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocksyncer

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ToodledoFetcher is an autogenerated mock type for the ToodledoFetcher type
type ToodledoFetcher struct {
	mock.Mock
}

// Start provides a mock function with given fields: _a0
func (_m *ToodledoFetcher) Start(_a0 context.Context) {
	_m.Called(_a0)
}

// Stop provides a mock function with given fields:
func (_m *ToodledoFetcher) Stop() {
	_m.Called()
}

// SyncOnce provides a mock function with given fields:
func (_m *ToodledoFetcher) SyncOnce() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// sync provides a mock function with given fields:
func (_m *ToodledoFetcher) sync() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewToodledoFetcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewToodledoFetcher creates a new instance of ToodledoFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewToodledoFetcher(t mockConstructorTestingTNewToodledoFetcher) *ToodledoFetcher {
	mock := &ToodledoFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
