// Code generated by mockery v2.12.1. DO NOT EDIT.

package mockcomponents

import (
	testing "testing"

	mock "github.com/stretchr/testify/mock"
)

// FocusableInterface is an autogenerated mock type for the FocusableInterface type
type FocusableInterface struct {
	mock.Mock
}

// Blur provides a mock function with given fields:
func (_m *FocusableInterface) Blur() {
	_m.Called()
}

// Focus provides a mock function with given fields:
func (_m *FocusableInterface) Focus() {
	_m.Called()
}

// NewFocusableInterface creates a new instance of FocusableInterface. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewFocusableInterface(t testing.TB) *FocusableInterface {
	mock := &FocusableInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
