// Code generated by go-swagger; DO NOT EDIT.

package goal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/alswl/go-toodledo/pkg/models"
)

// GetGoalsGetPhpReader is a Reader for the GetGoalsGetPhp structure.
type GetGoalsGetPhpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGoalsGetPhpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGoalsGetPhpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetGoalsGetPhpUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGoalsGetPhpTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGoalsGetPhpServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGoalsGetPhpOK creates a GetGoalsGetPhpOK with default headers values
func NewGetGoalsGetPhpOK() *GetGoalsGetPhpOK {
	return &GetGoalsGetPhpOK{}
}

/*
GetGoalsGetPhpOK describes a response with status code 200, with default header values.

ok
*/
type GetGoalsGetPhpOK struct {
	Payload []*models.Goal
}

func (o *GetGoalsGetPhpOK) Error() string {
	return fmt.Sprintf("[GET /goals/get.php][%d] getGoalsGetPhpOK  %+v", 200, o.Payload)
}
func (o *GetGoalsGetPhpOK) GetPayload() []*models.Goal {
	return o.Payload
}

func (o *GetGoalsGetPhpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGoalsGetPhpUnauthorized creates a GetGoalsGetPhpUnauthorized with default headers values
func NewGetGoalsGetPhpUnauthorized() *GetGoalsGetPhpUnauthorized {
	return &GetGoalsGetPhpUnauthorized{}
}

/*
GetGoalsGetPhpUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetGoalsGetPhpUnauthorized struct {
	Payload *models.Error
}

func (o *GetGoalsGetPhpUnauthorized) Error() string {
	return fmt.Sprintf("[GET /goals/get.php][%d] getGoalsGetPhpUnauthorized  %+v", 401, o.Payload)
}
func (o *GetGoalsGetPhpUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGoalsGetPhpUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGoalsGetPhpTooManyRequests creates a GetGoalsGetPhpTooManyRequests with default headers values
func NewGetGoalsGetPhpTooManyRequests() *GetGoalsGetPhpTooManyRequests {
	return &GetGoalsGetPhpTooManyRequests{}
}

/*
GetGoalsGetPhpTooManyRequests describes a response with status code 429, with default header values.

TooManyRequests
*/
type GetGoalsGetPhpTooManyRequests struct {
	Payload *models.Error
}

func (o *GetGoalsGetPhpTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /goals/get.php][%d] getGoalsGetPhpTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetGoalsGetPhpTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGoalsGetPhpTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGoalsGetPhpServiceUnavailable creates a GetGoalsGetPhpServiceUnavailable with default headers values
func NewGetGoalsGetPhpServiceUnavailable() *GetGoalsGetPhpServiceUnavailable {
	return &GetGoalsGetPhpServiceUnavailable{}
}

/*
GetGoalsGetPhpServiceUnavailable describes a response with status code 503, with default header values.

ServiceUnavailable
*/
type GetGoalsGetPhpServiceUnavailable struct {
	Payload *models.Error
}

func (o *GetGoalsGetPhpServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /goals/get.php][%d] getGoalsGetPhpServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetGoalsGetPhpServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGoalsGetPhpServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
