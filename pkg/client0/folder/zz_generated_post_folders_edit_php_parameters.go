// Code generated by go-swagger; DO NOT EDIT.

package folder

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	ccontext "context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostFoldersEditPhpParams creates a new PostFoldersEditPhpParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostFoldersEditPhpParams() *PostFoldersEditPhpParams {
	return &PostFoldersEditPhpParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostFoldersEditPhpParamsWithTimeout creates a new PostFoldersEditPhpParams object
// with the ability to set a timeout on a request.
func NewPostFoldersEditPhpParamsWithTimeout(timeout time.Duration) *PostFoldersEditPhpParams {
	return &PostFoldersEditPhpParams{
		timeout: timeout,
	}
}

// NewPostFoldersEditPhpParamsWithContext creates a new PostFoldersEditPhpParams object
// with the ability to set a context for a request.
func NewPostFoldersEditPhpParamsWithContext(ctx ccontext.Context) *PostFoldersEditPhpParams {
	return &PostFoldersEditPhpParams{
		Context: ctx,
	}
}

// NewPostFoldersEditPhpParamsWithHTTPClient creates a new PostFoldersEditPhpParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostFoldersEditPhpParamsWithHTTPClient(client *http.Client) *PostFoldersEditPhpParams {
	return &PostFoldersEditPhpParams{
		HTTPClient: client,
	}
}

/*
PostFoldersEditPhpParams contains all the parameters to send to the API endpoint

	for the post folders edit php operation.

	Typically these are written to a http.Request.
*/
type PostFoldersEditPhpParams struct {

	// Archived.
	Archived *int64

	// ID.
	ID string

	// Name.
	Name *string

	// Private.
	Private *int64

	timeout    time.Duration
	Context    ccontext.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post folders edit php params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostFoldersEditPhpParams) WithDefaults() *PostFoldersEditPhpParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post folders edit php params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostFoldersEditPhpParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post folders edit php params
func (o *PostFoldersEditPhpParams) WithTimeout(timeout time.Duration) *PostFoldersEditPhpParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post folders edit php params
func (o *PostFoldersEditPhpParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post folders edit php params
func (o *PostFoldersEditPhpParams) WithContext(ctx ccontext.Context) *PostFoldersEditPhpParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post folders edit php params
func (o *PostFoldersEditPhpParams) SetContext(ctx ccontext.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post folders edit php params
func (o *PostFoldersEditPhpParams) WithHTTPClient(client *http.Client) *PostFoldersEditPhpParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post folders edit php params
func (o *PostFoldersEditPhpParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArchived adds the archived to the post folders edit php params
func (o *PostFoldersEditPhpParams) WithArchived(archived *int64) *PostFoldersEditPhpParams {
	o.SetArchived(archived)
	return o
}

// SetArchived adds the archived to the post folders edit php params
func (o *PostFoldersEditPhpParams) SetArchived(archived *int64) {
	o.Archived = archived
}

// WithID adds the id to the post folders edit php params
func (o *PostFoldersEditPhpParams) WithID(id string) *PostFoldersEditPhpParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the post folders edit php params
func (o *PostFoldersEditPhpParams) SetID(id string) {
	o.ID = id
}

// WithName adds the name to the post folders edit php params
func (o *PostFoldersEditPhpParams) WithName(name *string) *PostFoldersEditPhpParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the post folders edit php params
func (o *PostFoldersEditPhpParams) SetName(name *string) {
	o.Name = name
}

// WithPrivate adds the private to the post folders edit php params
func (o *PostFoldersEditPhpParams) WithPrivate(private *int64) *PostFoldersEditPhpParams {
	o.SetPrivate(private)
	return o
}

// SetPrivate adds the private to the post folders edit php params
func (o *PostFoldersEditPhpParams) SetPrivate(private *int64) {
	o.Private = private
}

// WriteToRequest writes these params to a swagger request
func (o *PostFoldersEditPhpParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Archived != nil {

		// query param archived
		var qrArchived int64

		if o.Archived != nil {
			qrArchived = *o.Archived
		}
		qArchived := swag.FormatInt64(qrArchived)
		if qArchived != "" {

			if err := r.SetQueryParam("archived", qArchived); err != nil {
				return err
			}
		}
	}

	// query param id
	qrID := o.ID
	qID := qrID
	if qID != "" {

		if err := r.SetQueryParam("id", qID); err != nil {
			return err
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.Private != nil {

		// query param private
		var qrPrivate int64

		if o.Private != nil {
			qrPrivate = *o.Private
		}
		qPrivate := swag.FormatInt64(qrPrivate)
		if qPrivate != "" {

			if err := r.SetQueryParam("private", qPrivate); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
