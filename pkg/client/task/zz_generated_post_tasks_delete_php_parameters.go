// Code generated by go-swagger; DO NOT EDIT.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	ccontext "context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostTasksDeletePhpParams creates a new PostTasksDeletePhpParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPostTasksDeletePhpParams() *PostTasksDeletePhpParams {
	return &PostTasksDeletePhpParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPostTasksDeletePhpParamsWithTimeout creates a new PostTasksDeletePhpParams object
// with the ability to set a timeout on a request.
func NewPostTasksDeletePhpParamsWithTimeout(timeout time.Duration) *PostTasksDeletePhpParams {
	return &PostTasksDeletePhpParams{
		timeout: timeout,
	}
}

// NewPostTasksDeletePhpParamsWithContext creates a new PostTasksDeletePhpParams object
// with the ability to set a context for a request.
func NewPostTasksDeletePhpParamsWithContext(ctx ccontext.Context) *PostTasksDeletePhpParams {
	return &PostTasksDeletePhpParams{
		Context: ctx,
	}
}

// NewPostTasksDeletePhpParamsWithHTTPClient creates a new PostTasksDeletePhpParams object
// with the ability to set a custom HTTPClient for a request.
func NewPostTasksDeletePhpParamsWithHTTPClient(client *http.Client) *PostTasksDeletePhpParams {
	return &PostTasksDeletePhpParams{
		HTTPClient: client,
	}
}

/*
PostTasksDeletePhpParams contains all the parameters to send to the API endpoint

	for the post tasks delete php operation.

	Typically these are written to a http.Request.
*/
type PostTasksDeletePhpParams struct {

	/* Tasks.

	   Array of tasks, should be put json string
	*/
	Tasks *string

	timeout    time.Duration
	Context    ccontext.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the post tasks delete php params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostTasksDeletePhpParams) WithDefaults() *PostTasksDeletePhpParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the post tasks delete php params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PostTasksDeletePhpParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the post tasks delete php params
func (o *PostTasksDeletePhpParams) WithTimeout(timeout time.Duration) *PostTasksDeletePhpParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post tasks delete php params
func (o *PostTasksDeletePhpParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post tasks delete php params
func (o *PostTasksDeletePhpParams) WithContext(ctx ccontext.Context) *PostTasksDeletePhpParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post tasks delete php params
func (o *PostTasksDeletePhpParams) SetContext(ctx ccontext.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post tasks delete php params
func (o *PostTasksDeletePhpParams) WithHTTPClient(client *http.Client) *PostTasksDeletePhpParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post tasks delete php params
func (o *PostTasksDeletePhpParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTasks adds the tasks to the post tasks delete php params
func (o *PostTasksDeletePhpParams) WithTasks(tasks *string) *PostTasksDeletePhpParams {
	o.SetTasks(tasks)
	return o
}

// SetTasks adds the tasks to the post tasks delete php params
func (o *PostTasksDeletePhpParams) SetTasks(tasks *string) {
	o.Tasks = tasks
}

// WriteToRequest writes these params to a swagger request
func (o *PostTasksDeletePhpParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Tasks != nil {

		// query param tasks
		var qrTasks string

		if o.Tasks != nil {
			qrTasks = *o.Tasks
		}
		qTasks := qrTasks
		if qTasks != "" {

			if err := r.SetQueryParam("tasks", qTasks); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
