// Code generated by go-swagger; DO NOT EDIT.

package goal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/alswl/go-toodledo/pkg/models"
)

// PostGoalsAddPhpReader is a Reader for the PostGoalsAddPhp structure.
type PostGoalsAddPhpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGoalsAddPhpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostGoalsAddPhpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostGoalsAddPhpUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostGoalsAddPhpTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostGoalsAddPhpServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGoalsAddPhpOK creates a PostGoalsAddPhpOK with default headers values
func NewPostGoalsAddPhpOK() *PostGoalsAddPhpOK {
	return &PostGoalsAddPhpOK{}
}

/*
	PostGoalsAddPhpOK describes a response with status code 200, with default header values.

ok
*/
type PostGoalsAddPhpOK struct {
	Payload []*models.Goal
}

func (o *PostGoalsAddPhpOK) Error() string {
	return fmt.Sprintf("[POST /goals/add.php][%d] postGoalsAddPhpOK  %+v", 200, o.Payload)
}
func (o *PostGoalsAddPhpOK) GetPayload() []*models.Goal {
	return o.Payload
}

func (o *PostGoalsAddPhpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGoalsAddPhpUnauthorized creates a PostGoalsAddPhpUnauthorized with default headers values
func NewPostGoalsAddPhpUnauthorized() *PostGoalsAddPhpUnauthorized {
	return &PostGoalsAddPhpUnauthorized{}
}

/*
	PostGoalsAddPhpUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostGoalsAddPhpUnauthorized struct {
	Payload *models.Error
}

func (o *PostGoalsAddPhpUnauthorized) Error() string {
	return fmt.Sprintf("[POST /goals/add.php][%d] postGoalsAddPhpUnauthorized  %+v", 401, o.Payload)
}
func (o *PostGoalsAddPhpUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostGoalsAddPhpUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGoalsAddPhpTooManyRequests creates a PostGoalsAddPhpTooManyRequests with default headers values
func NewPostGoalsAddPhpTooManyRequests() *PostGoalsAddPhpTooManyRequests {
	return &PostGoalsAddPhpTooManyRequests{}
}

/*
	PostGoalsAddPhpTooManyRequests describes a response with status code 429, with default header values.

TooManyRequests
*/
type PostGoalsAddPhpTooManyRequests struct {
	Payload *models.Error
}

func (o *PostGoalsAddPhpTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /goals/add.php][%d] postGoalsAddPhpTooManyRequests  %+v", 429, o.Payload)
}
func (o *PostGoalsAddPhpTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostGoalsAddPhpTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGoalsAddPhpServiceUnavailable creates a PostGoalsAddPhpServiceUnavailable with default headers values
func NewPostGoalsAddPhpServiceUnavailable() *PostGoalsAddPhpServiceUnavailable {
	return &PostGoalsAddPhpServiceUnavailable{}
}

/*
	PostGoalsAddPhpServiceUnavailable describes a response with status code 503, with default header values.

ServiceUnavailable
*/
type PostGoalsAddPhpServiceUnavailable struct {
	Payload *models.Error
}

func (o *PostGoalsAddPhpServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /goals/add.php][%d] postGoalsAddPhpServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostGoalsAddPhpServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostGoalsAddPhpServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
