// Code generated by go-swagger; DO NOT EDIT.

package context

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/alswl/go-toodledo/pkg/models"
)

// PostContextsAddPhpReader is a Reader for the PostContextsAddPhp structure.
type PostContextsAddPhpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostContextsAddPhpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostContextsAddPhpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostContextsAddPhpUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostContextsAddPhpTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostContextsAddPhpServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostContextsAddPhpOK creates a PostContextsAddPhpOK with default headers values
func NewPostContextsAddPhpOK() *PostContextsAddPhpOK {
	return &PostContextsAddPhpOK{}
}

/*
	PostContextsAddPhpOK describes a response with status code 200, with default header values.

ok
*/
type PostContextsAddPhpOK struct {
	Payload []*models.Context
}

func (o *PostContextsAddPhpOK) Error() string {
	return fmt.Sprintf("[POST /contexts/add.php][%d] postContextsAddPhpOK  %+v", 200, o.Payload)
}
func (o *PostContextsAddPhpOK) GetPayload() []*models.Context {
	return o.Payload
}

func (o *PostContextsAddPhpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContextsAddPhpUnauthorized creates a PostContextsAddPhpUnauthorized with default headers values
func NewPostContextsAddPhpUnauthorized() *PostContextsAddPhpUnauthorized {
	return &PostContextsAddPhpUnauthorized{}
}

/*
	PostContextsAddPhpUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostContextsAddPhpUnauthorized struct {
	Payload *models.Error
}

func (o *PostContextsAddPhpUnauthorized) Error() string {
	return fmt.Sprintf("[POST /contexts/add.php][%d] postContextsAddPhpUnauthorized  %+v", 401, o.Payload)
}
func (o *PostContextsAddPhpUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostContextsAddPhpUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContextsAddPhpTooManyRequests creates a PostContextsAddPhpTooManyRequests with default headers values
func NewPostContextsAddPhpTooManyRequests() *PostContextsAddPhpTooManyRequests {
	return &PostContextsAddPhpTooManyRequests{}
}

/*
	PostContextsAddPhpTooManyRequests describes a response with status code 429, with default header values.

TooManyRequests
*/
type PostContextsAddPhpTooManyRequests struct {
	Payload *models.Error
}

func (o *PostContextsAddPhpTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /contexts/add.php][%d] postContextsAddPhpTooManyRequests  %+v", 429, o.Payload)
}
func (o *PostContextsAddPhpTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostContextsAddPhpTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostContextsAddPhpServiceUnavailable creates a PostContextsAddPhpServiceUnavailable with default headers values
func NewPostContextsAddPhpServiceUnavailable() *PostContextsAddPhpServiceUnavailable {
	return &PostContextsAddPhpServiceUnavailable{}
}

/*
	PostContextsAddPhpServiceUnavailable describes a response with status code 503, with default header values.

ServiceUnavailable
*/
type PostContextsAddPhpServiceUnavailable struct {
	Payload *models.Error
}

func (o *PostContextsAddPhpServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /contexts/add.php][%d] postContextsAddPhpServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostContextsAddPhpServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostContextsAddPhpServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
