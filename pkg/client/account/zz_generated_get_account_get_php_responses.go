// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/alswl/go-toodledo/pkg/models"
)

// GetAccountGetPhpReader is a Reader for the GetAccountGetPhp structure.
type GetAccountGetPhpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountGetPhpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountGetPhpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAccountGetPhpUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAccountGetPhpTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAccountGetPhpServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccountGetPhpOK creates a GetAccountGetPhpOK with default headers values
func NewGetAccountGetPhpOK() *GetAccountGetPhpOK {
	return &GetAccountGetPhpOK{}
}

/* GetAccountGetPhpOK describes a response with status code 200, with default header values.

ok
*/
type GetAccountGetPhpOK struct {
	Payload *models.Account
}

// Error ...
func (o *GetAccountGetPhpOK) Error() string {
	return fmt.Sprintf("[GET /account/get.php][%d] getAccountGetPhpOK  %+v", 200, o.Payload)
}

// GetPayload ...
func (o *GetAccountGetPhpOK) GetPayload() *models.Account {
	return o.Payload
}

func (o *GetAccountGetPhpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Account)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountGetPhpUnauthorized creates a GetAccountGetPhpUnauthorized with default headers values
func NewGetAccountGetPhpUnauthorized() *GetAccountGetPhpUnauthorized {
	return &GetAccountGetPhpUnauthorized{}
}

/* GetAccountGetPhpUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAccountGetPhpUnauthorized struct {
	Payload *models.Error
}

// Error ...
func (o *GetAccountGetPhpUnauthorized) Error() string {
	return fmt.Sprintf("[GET /account/get.php][%d] getAccountGetPhpUnauthorized  %+v", 401, o.Payload)
}

// GetPayload ...
func (o *GetAccountGetPhpUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountGetPhpUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountGetPhpTooManyRequests creates a GetAccountGetPhpTooManyRequests with default headers values
func NewGetAccountGetPhpTooManyRequests() *GetAccountGetPhpTooManyRequests {
	return &GetAccountGetPhpTooManyRequests{}
}

/* GetAccountGetPhpTooManyRequests describes a response with status code 429, with default header values.

TooManyRequests
*/
type GetAccountGetPhpTooManyRequests struct {
	Payload *models.Error
}

// Error ...
func (o *GetAccountGetPhpTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /account/get.php][%d] getAccountGetPhpTooManyRequests  %+v", 429, o.Payload)
}

// GetPayload ...
func (o *GetAccountGetPhpTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountGetPhpTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountGetPhpServiceUnavailable creates a GetAccountGetPhpServiceUnavailable with default headers values
func NewGetAccountGetPhpServiceUnavailable() *GetAccountGetPhpServiceUnavailable {
	return &GetAccountGetPhpServiceUnavailable{}
}

/* GetAccountGetPhpServiceUnavailable describes a response with status code 503, with default header values.

ServiceUnavailable
*/
type GetAccountGetPhpServiceUnavailable struct {
	Payload *models.Error
}

// Error ...
func (o *GetAccountGetPhpServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /account/get.php][%d] getAccountGetPhpServiceUnavailable  %+v", 503, o.Payload)
}

// GetPayload ...
func (o *GetAccountGetPhpServiceUnavailable) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountGetPhpServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
