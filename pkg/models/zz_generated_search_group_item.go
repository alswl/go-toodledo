// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	ccontext "context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SearchGroupItem search group item
//
// swagger:model SearchGroupItem
type SearchGroupItem struct {

	// The name of the field being inspected.
	Field string `json:"field,omitempty"`

	// The type of search being performed.
	// - contains : Matches a string if it contains this substring
	// - yes : Boolean true
	// - is : Exact value match
	// - begins with : Matches a string if it starts with this substring
	// - ends with : Matches a string if it ends with this substring
	// - does not contain : Matches a string if it does not contain this substring
	// - no : Boolean false
	// - is not : Exact value mismatch
	// - is after : Matches a date if it comes after this value
	// - is more than : Matches a number if it comes after this value
	// - is before : Matches a date if it comes before this value
	// - is less than : Matches a number if it comes before this value
	// - was in the last : Matches a date if it was in the last X days
	// - was not in the last : Matches a date if it was not in the last X days
	// - is in the next : Matches a date if it is in the next X days
	// - is not in the next : Matches a date if it is not in the next X days
	// - is in : Matches a date if it is in exactly X days
	// - is not in : Matches a date if it is not in exactly X days
	// - was : Matches a date if it was exactly X days ago
	// - was not : Matches a date if it was not exactly X days ago
	// - exists : Matches if the field has a non-zero value
	// - does not exist : Matches if the field is empty or zero
	//
	Type string `json:"type,omitempty"`

	// The value to search with.
	Value string `json:"value,omitempty"`
}

// Validate validates this search group item
func (m *SearchGroupItem) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this search group item based on context it is used
func (m *SearchGroupItem) ContextValidate(ctx ccontext.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SearchGroupItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchGroupItem) UnmarshalBinary(b []byte) error {
	var res SearchGroupItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
